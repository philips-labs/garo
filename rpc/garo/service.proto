syntax = "proto3";

package philips.garo.garo;
option go_package = "garo";

// GetRepoConfigurationRequest request the configuration for a given repository and organization
message GetRepoConfigurationRequest {
	string organisation = 1; // required
	string repository = 2; // required
}

// RepoConfigurationResponse returns agent configuration options
message RepoConfigurationResponse {
	string repository = 1;
	uint32 maxConcurrentRunners = 2;
}

// AgentConfigurationService provides agent configurations
service AgentConfigurationService {
	rpc GetRepositoryConfiguration (GetRepoConfigurationRequest) returns (RepoConfigurationResponse);
}
